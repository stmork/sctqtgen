1.2.4
 * Renamed timer slot.
 * Non debug version compiles now.

1.2.3
 * Configurable Qt base class.

1.2.2
 * Using a high precision timer if there are milliseconds
   in timer definitions. E.G.: "after 2 s" or "every 3000 ms"
   uses a Qt::QTimerType::CoarseTimer, but a 311 ms or
   3153 ms definition uses a high precision timer.
 * Debug logging of Qt signal occurences.
 * Timer object are now QObject children of the statemachine.
 * Refactored methods start() and stop() as slots to make
   the adaptor inter threadable.

1.2.1
 * Generator improvements concerning code quality.

1.2.0
 * Support for new YAKINDU SCT 3.x

1.1.2
 * Debug logging support.
 * Camel case vs. lower camel case now configurable for
   signal and slot generation.
 * Corrected type library path generation.
 * Organize logging in a callback method.

1.1.1
 * Support for timerless statecharts.
 * Added additional simple example without timers.

1.1.0
 * Reflect new custom generator API of YAKINDU SCT 2.8 and
   following.

1.0.7
 * New location of the update sites.
 * The init() method is invoked early in the constructor now
   instead of the starting of the state machine. This allows
   better preinitialization of the state machine.

1.0.6
 * clearing events on enter() and exit().

1.0.5
 * Updated to YAKINDU SCT 2.6.0 API.
 * Reverted Qt5 keywords back to C++11 for Qt4 compatibility:
   * QT_DECL_OVERRIDE
   * QT_NULLPTR

1.0.4
 * Corrected Doxygen comments.
 * Declared some deleted constructors in case of C++11.

1.0.3
 * Removed dead code generation.
 * Added comments for Doxygen.

1.0.2
 * Replaced C++11 keywords by Qt defines:
   * QT_DECL_OVERRIDE
   * QT_NULLPTR
